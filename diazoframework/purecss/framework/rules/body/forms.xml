<?xml version="1.0" encoding="UTF-8"?>
<rules xmlns="http://namespaces.plone.org/diazo"
       xmlns:css="http://namespaces.plone.org/diazo/css"
       xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
       xmlns:xi="http://www.w3.org/2001/XInclude">

  <replace content="//form">
      <form>
          <xsl:copy-of select="@*[local-name() != 'class']"/>
          <xsl:attribute name="class">pure-form pure-form-stacked</xsl:attribute>
          <xsl:apply-templates select="./*"/>
      </form>
  </replace>

  <replace content="//form[@id='searchGadget_form']">
      <form>
          <xsl:copy-of select="@*[local-name() != 'class']"/>
          <xsl:attribute name="class">pure-form pure-form-search</xsl:attribute>
          <div class="LSBox">
              <xsl:apply-templates select="./div/*[not(@type='submit') and not(@class='LSResult')]"/>
              <xsl:apply-templates select="./div/*[@type='submit']"/>
              <xsl:apply-templates select="./div/*[@class='LSResult']"/>
          </div>
      </form>
  </replace>

  <replace content="//form[contains(@class, 'searchPage')]">
      <form>
          <xsl:copy-of select="@*[local-name() != 'class']"/>
          <xsl:attribute name="class">pure-form pure-form-search searchPage</xsl:attribute>
          <xsl:apply-templates select="./*"/>
      </form>
  </replace>

  <replace css:content=".field">
    <xsl:choose>
        <xsl:when test="./input[@type='checkbox']|./input[@type='radio']">
            <div class="field pure-control-group">
                <xsl:apply-templates select="./*[not(@type='radio' or @type='checkbox' or (local-name() = 'label' and preceding-sibling::input[@type='radio' or @type='checkbox']))]"/>
                <xsl:for-each select="./input[@type='checkbox']">
                    <xsl:variable name="label" select="./following-sibling::label"/>
                    <label for="option-one" class="pure-checkbox">
                        <xsl:copy-of select="$label/@for"/>
                        <input>
                            <xsl:apply-templates select="./@*"/>
                        </input>
                        <xsl:value-of select="$label/text()"/>
                    </label>
                </xsl:for-each>
                <xsl:for-each select="./input[@type='radio']">
                    <xsl:variable name="label" select="./following-sibling::label"/>
                    <label for="option-one" class="pure-radio">
                        <xsl:copy-of select="$label/@for"/>
                        <input>
                            <xsl:apply-templates select="./@*"/>
                        </input>
                        <xsl:value-of select="$label/text()"/>
                    </label>
                </xsl:for-each>
            </div>            
        </xsl:when>
        <xsl:otherwise>
            <div class="field pure-control-group">
              <xsl:apply-templates select="./*"/>
            </div>
        </xsl:otherwise>
    </xsl:choose>
  </replace>

  <replace css:content=".formHelp">
    <small class="formHelp">
      <xsl:apply-templates select="./text()"/>
    </small>
  </replace>

  <replace content="//*[@id='search-filter']//label">
      <label>
          <xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text>
          <xsl:value-of select="."/>
          <xsl:text disable-output-escaping="yes"><![CDATA[&nbsp;]]></xsl:text>
      </label><br />
  </replace>

  <replace content="//input[@type='submit']|//input[@type='reset']">
      <button>
          <xsl:copy-of select="@*[local-name() != 'class' and local-name() != 'value' and local-name() != 'type']"/>
          <xsl:attribute name="class"><xsl:value-of select="@class"/> pure-button</xsl:attribute>
          <xsl:value-of select="./@value"/>
      </button>
  </replace>

  <replace css:content="input.searchButton">
      <button>
          <xsl:copy-of select="@*[local-name() != 'class' and local-name() != 'value' and local-name() != 'type']"/>
          <xsl:attribute name="class"><xsl:value-of select="@class"/> pure-button pure-button-primary</xsl:attribute>
          <xsl:value-of select="./@value"/>
      </button>
  </replace>

  <replace css:content="#search-filter input.searchButton"/>

  <strip css:content=".searchSection"/>
  <strip css:content=".formControls"/>
  <strip css:content="#search-filter div, #search-filter span, #search-filter br"/>

</rules>
